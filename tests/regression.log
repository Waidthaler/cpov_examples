//==============================================================================
// TEST #1: Preamble(s) and SDL include(s)
//==============================================================================

Results appear in first frame file.


//==============================================================================
// TEST #2: ImageOptions: all parameters at init
//==============================================================================

CLI string: c:\bin\povray.exe +GApoof +R5 +AG1.81 +A2.2 +GP +BM1 +MB5 -THFS +EC256 +ER256 +H480 +Iblarp.pov +J1.5 +Lc:\dat\lib +UA +Osquink.png +S8 +DYX -P +EP2 +SP4 +Q11 -UR +BS4 +RS1 +RP4 +AM2 -SU +SC32 +SR32 -X -X2 +V +WL5 +W640 +WT8

INI file:

All_File=poof
Antialias=true
Antialias_Depth=5
Antialias_Gamma=1.81
Antialias_Threshold=2.2
Append_File=true
Bits_Per_Color=8
Bounding=true
Bounding_Method=1
Bounding_Threshold=5
BSP_BaseAccessCost=1.3
BSP_ChildAccessCost=2.4
BSP_IsectCost=3.5
BSP_MaxDepth=9
BSP_MissChance=0.03
Display=true
Display_Gamma=sRGB
Dither=false
Dither_Method=FS
End_Column=256
End_Row=256
Fatal_Error_Command=dir
Fatal_Error_Return=I
File_Gamma=1.2
Height=480
High_Reproducibility=false
Input_File_Name=blarp.pov
Jitter=true
Jitter_Amount=1.5
Library_Path=c:\dat\lib
Output_Alpha=true
Output_File_Name=squink.png
Output_File_Type=S
Palette=X
Pause_When_Done=false
Post_Scene_Command=dir foo
Post_Scene_Return=Q
Pre_Scene_Command=dir foo
Pre_Scene_Return=!F
Preview_End_Size=2
Preview_Start_Size=4
Quality=11
Remove_Bounds=false
Render_Block_Size=4
Render_Block_Step=1
Render_Pattern=4
Sampling_Method=2
Split_Unions=false
Start_Column=32
Start_Row=32
Test_Abort=false
Test_Abort_Count=2
User_Abort_Command=dir manama
User_Abort_Return=-F
Verbose=true
Video_Mode=Y
Warning_Level=5
Width=640
Work_Threads=8


//==============================================================================
// TEST #3: ImageOptions: all parameters after init
//==============================================================================

CLI string: c:\bin\povray.exe +GApoof +R5 +AG1.81 +A2.2 +GP +BM1 +MB5 -THFS +EC256 +ER256 +H480 +Iblarp.pov +J1.5 +Lc:\dat\lib +UA +Osquink.png +S8 +DYX -P +EP1 +SP8 +Q11 -UR +BS4 +RS1 +RP4 +AM2 -SU +SC32 +SR32 -X -X2 +V +WL5 +W640 +WT8

INI file:

All_File=poof
Antialias=true
Antialias_Depth=5
Antialias_Gamma=1.81
Antialias_Threshold=2.2
Append_File=true
Bits_Per_Color=8
Bounding=true
Bounding_Method=1
Bounding_Threshold=5
BSP_BaseAccessCost=1.3
BSP_ChildAccessCost=2.4
BSP_IsectCost=3.5
BSP_MaxDepth=9
BSP_MissChance=0.03
Display=true
Display_Gamma=sRGB
Dither=false
Dither_Method=FS
End_Column=256
End_Row=256
Fatal_Error_Command=dir
Fatal_Error_Return=I
File_Gamma=1.2
Height=480
High_Reproducibility=false
Input_File_Name=blarp.pov
Jitter=true
Jitter_Amount=1.5
Library_Path=c:\dat\lib
Output_Alpha=true
Output_File_Name=squink.png
Output_File_Type=S
Palette=X
Pause_When_Done=false
Post_Scene_Command=dir foo
Post_Scene_Return=Q
Pre_Scene_Command=dir foo
Pre_Scene_Return=!F
Preview_End_Size=1
Preview_Start_Size=8
Quality=11
Remove_Bounds=false
Render_Block_Size=4
Render_Block_Step=1
Render_Pattern=4
Sampling_Method=2
Split_Unions=false
Start_Column=32
Start_Row=32
Test_Abort=false
Test_Abort_Count=2
User_Abort_Command=dir manama
User_Abort_Return=-F
Verbose=true
Video_Mode=Y
Warning_Level=5
Width=640
Work_Threads=8


//==============================================================================
// TEST #4: GlobalSettings: all parameters at init
//==============================================================================

global_settings {
    adc_bailout 5
    ambient_light  <1, 1, 0>
    assumed_gamma 0.15
    irid_wavelength  <1, 1, 0>
    charset utf8
    max_intersections 5
    max_trace_level 6
    mm_per_unit 0.1
    number_of_waves 2
    noise_generator 2
    radiosity {
        adc_bailout 1.2
        always_sample false
        brightness 0.6
        count 1, 2
        error_bound 6.2
        gray_threshold 0.26
        low_error_factor 2
        max_sample 0.12
        maximum_reuse 5
        minimum_reuse 2.1
        nearest_count 15
        normal true
        pretrace_start 0.8
        pretrace_end 0.2
        recursion_limit 5
        subsurface true
    }
    subsurface {
        radiosity true
        samples 7, 19
    }
    photon {
        count 66
        gather 5, 8
        media 5, 0.222
        jitter 1.2
        max_trace_level 4
        adc_bailout 4.5
        save_file bar
        load_file foo
        autostop 0.54
        expand_thresholds 0.1, 6
        radius 1.2, 6, 0.02, -1.2
    }
}


//==============================================================================
// TEST #5: GlobalSettings: all parameters after init
//==============================================================================

global_settings {
    adc_bailout 5
    ambient_light  <1, 1, 0>
    assumed_gamma 0.15
    irid_wavelength  <1, 1, 0>
    charset utf8
    max_intersections 5
    max_trace_level 6
    mm_per_unit 0.1
    number_of_waves 2
    noise_generator 2
    radiosity {
        adc_bailout 1.2
        always_sample false
        brightness 0.6
        count 1, 2
        error_bound 6.2
        gray_threshold 0.26
        low_error_factor 2
        max_sample 0.12
        maximum_reuse 5
        minimum_reuse 2.1
        nearest_count 15
        normal true
        pretrace_start 0.8
        pretrace_end 0.2
        recursion_limit 5
        subsurface true
    }
    subsurface {
        radiosity true
        samples 7, 19
    }
    photon {
        count 66
        gather 5, 8
        media 5, 0.222
        jitter 1.2
        max_trace_level 4
        adc_bailout 4.5
        save_file bar
        load_file foo
        autostop 0.54
        expand_thresholds 0.1, 6
        radius 1.2, 6, 0.02, -1.2
    }
}


//==============================================================================
// TEST #6: Box: minimal test
//==============================================================================

box { // BoxArray
    <0, 0, 0>, <1, 1, 1>
}

box { // BoxVector
    <2, 3, 4>, <5, 6, 7>
}


//==============================================================================
// TEST #7: BicubicPatch: minimal test
//==============================================================================

bicubic_patch { // bicubicPatchTestMinimum
    type 1
    u_steps 32
    v_steps 32
    flatness 1
    <1, 1, 1>, <2, 1, 2>, <3, 1, 5>, <4, 1, 2>,
    <1, 2, 1>, <2, 2, 7>, <3, 2, 3>, <4, 2, 2>,
    <1, 3, 2>, <2, 3, 5>, <3, 3, 4>, <4, 3, 1>,
    <1, 4, 2>, <2, 4, 4>, <3, 4, 7>, <4, 4, 1>
}



//==============================================================================
// TEST #8: Blob: minimal test
//==============================================================================

blob { // blobTestMinimum
    threshold 1
    sphere { <0, 0, 0>, 1, 1.2 }
    cylinder { <1, 1, 1>, <2, 2, 2>, 2, 1.8 }
    hierarchy on
    sturm
}



//==============================================================================
// TEST #9: Box: all (applicable) Primitive params
//==============================================================================

box { // commonParamTest
    <0, 0, 0>, <1, 1, 1>
    no_shadow
    no_image
    no_radiosity
    no_reflection
    inverse
    hollow
}



//==============================================================================
// TEST #10: Cone: minimal test
//==============================================================================

cone { // coneTestMinimum
    <0, 0, 0>, 5, <1, 2, 3>, 0
    open
}



//==============================================================================
// TEST #11: Cubic: minimal test
//==============================================================================

cubic { // cubicTestMinimum
    < 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 >
    sturm
}



//==============================================================================
// TEST #12: Cylinder: minimal test
//==============================================================================

cylinder { // cylinderTestMinimum
    <0, 0, 0>, <1, 2, 3>, 5
    open
}



//==============================================================================
// TEST #13: Disc: minimal test
//==============================================================================

disc { // discTestMinimum
    <3, 4, 5>, <0, 1, 0>, 5, 10
}



//==============================================================================
// TEST #14: HeightField: minimal test
//==============================================================================

height_field { // heightFieldTestMinimum
    png "foo.png" gamma 1.2 
    smooth
    water_level 0.2
}



//==============================================================================
// TEST #15: IsoSurface: minimal test
//==============================================================================

isosurface { // isoSurfaceTestMinimum
    foo
    contained_by {
        box {
            <0, 0, 0>, <1, 1, 1>
        }
    }
    threshold 1
    accuracy 1.2
    max_gradient 1.3
    evaluate 2, 2.1, 2.2
    open
    max_trace allIntersections
}



//==============================================================================
// TEST #16: JuliaFractal: minimal test
//==============================================================================

julia_fractal { // juliaFractalMinimum
    <1, 2, 3, 4>
    hypercomplex
    reciprocal
    max_iteration 2500
    precision 5
    slice <1.1, 2.2, 3.3, 4.4>, 2.1
}



//==============================================================================
// TEST #17: Lathe: minimal test
//==============================================================================

lathe { // latheTestMinimum
    linear_spline
    3, <0, 0>, <1, 1>, <0, 1>
    sturm
}



//==============================================================================
// TEST #18: Mesh: minimal test
//==============================================================================

mesh { // meshTestMinimum
    triangle {
        <0, 0, 0>, <0, 1, 0>, <0, 0, 1>
    }
    triangle {
        <2, 2, 2>, <0, 1, 0>, <0, 0, 1>
    }
    inside_vector <0, 1, 0>
    hierarchy on
}



//==============================================================================
// TEST #19: Ovus: minimal test
//==============================================================================

ovus { // ovusTestMinimum
    10, 5
}



//==============================================================================
// TEST #20: Parametric: minimal test
//==============================================================================

parametric { // parametricTestMinimum
    foo
    bar
    baz
    <0, 0>, <1, 1>
    contained_by {
        box {
            <0, 0, 0>, <1, 1, 1>
        }
    }
    max_gradient 1.2
    accuracy 1.3
    precompute 4 x, y, z
}



//==============================================================================
// TEST #21: Plane: minimal test
//==============================================================================

plane { // planeTestMinimum
    <1, 0, 0>, 22
}



//==============================================================================
// TEST #22: Poly: minimal test
//==============================================================================

poly { // polyTestMinimum
    3, < 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2 >
    sturm
}



//==============================================================================
// TEST #23: Polygon: minimal test
//==============================================================================

polygon { // polygonTestMinimum
    3,
    <0, 0>, <1, 1>, <1, 0>
}



//==============================================================================
// TEST #24: Polynomial: minimal test
//==============================================================================

polynomial { // polynomialTestMinimum
    2, 
    xyz(1, 10, 2):1,
    xyz(2, 9, 4):2,
    xyz(3, 8, 6):1,
    xyz(4, 7, 8):2,
    xyz(5, 6, 6):1,
    xyz(6, 5, 4):2,
    xyz(7, 4, 2):1,
    xyz(8, 3, 0):2,
    xyz(9, 2, 2):1,
    xyz(10, 1, 4):2
    sturm
}



//==============================================================================
// TEST #25: Prism: minimal test
//==============================================================================

prism { // prismTestMinimum
    linear_spline
    0, 0, 3,
    <0, 0>, <1, 1>, <1, 0>
    open
    sturm
}



//==============================================================================
// TEST #26: Quadric: minimal test
//==============================================================================

quadric { // quadricTestMinimum
    <1, 2, 3>, <4, 5, 6>, <7, 8, 9>, 10
}



//==============================================================================
// TEST #27: Quartic: minimal test
//==============================================================================

quartic { // quarticTestMinimum
    < 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 122, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 >
}



//==============================================================================
// TEST #28: Sor: minimal test
//==============================================================================

sor { // sorTestMinimum
    3, <0, 0>, <1, 1>, <0, 2>
}



//==============================================================================
// TEST #29: Sphere: minimal test
//==============================================================================

sphere { // sphereTestMinimum
    <0, 5, 15>, 12
}



//==============================================================================
// TEST #30: SphereSweep: minimal test
//==============================================================================

sphere_sweep { // sphereSweepTestMinimum
    linear_spline
    2,
    <1, 2, 3>, 1.2,
    <4, 5, 6>, 2.4
    tolerance 1.2
}



//==============================================================================
// TEST #31: Superellipsoid: minimal test
//==============================================================================

superellipsoid { // superellipsoidTestMinimum
    <5, 4>
}



//==============================================================================
// TEST #32: Text: minimal test
//==============================================================================

text { // textTestMinimum
    ttf "Arial" "POV-Ray rules!"
    1, 1.2
}



//==============================================================================
// TEST #33: Torus: minimal test
//==============================================================================

torus { // torusTestMinimum
    20, 4
}



//==============================================================================
// TEST #34: Triangle: minimal test
//==============================================================================

triangle { // triangleTestMinimum
    <0, 0, 0>, <1, 0, 0>, <1, 1, 0>
}

smooth_triangle {
    <0, 0, 0>, <0, 1, 0>, <1, 0, 0>, <1, 1, 0>, <1, 1, 0>, <0, 1, 1>
}



//==============================================================================
// TEST #35: Union: minimal test
//==============================================================================

union { // unionTestMinimum
    box {
        <0, 0, 0>, <1, 1, 1>
    }
    box {
        <0.5, 0.5, 0.5>, <1.5, 1.5, 1.5>
    }
    box {
        <1, 1, 1>, <2, 2, 2>
    }
    split_union on
}



//==============================================================================
// TEST #36: Merge: minimal test
//==============================================================================

merge { // mergeTestMinimum
    box {
        <0, 0, 0>, <1, 1, 1>
    }
    box {
        <0.5, 0.5, 0.5>, <1.5, 1.5, 1.5>
    }
    box {
        <1, 1, 1>, <2, 2, 2>
    }
}



//==============================================================================
// TEST #37: Intersection: minimal test
//==============================================================================

intersection { // intersectionTestMinimum
    box {
        <0, 0, 0>, <1, 1, 1>
    }
    box {
        <0.5, 0.5, 0.5>, <1.5, 1.5, 1.5>
    }
    box {
        <1, 1, 1>, <2, 2, 2>
    }
}



//==============================================================================
// TEST #38: Difference: minimal test
//==============================================================================

difference { // differenceTestMinimum
    box {
        <0.5, 0.5, 0.5>, <1.5, 1.5, 1.5>
    }
    box {
        <0, 0, 0>, <1, 1, 1>
    }
    box {
        <1, 1, 1>, <2, 2, 2>
    }
}



//==============================================================================
// TEST #39: LightSource: minimal test
//==============================================================================

light_source { // point_lightSourceTestMinimum
    <1, 1, 1>, rgb <1, 1, 1>
    fade_distance 5.1
    fade_power 1.2
}



//==============================================================================
// TEST #40: Camera: minimal test
//==============================================================================

camera { // cameraTestMinimum
    perspective
    location <5, 5, 5>
    look_at <0, 0, 0>
}



//==============================================================================
// TEST #41: Vector* initializer tests
//==============================================================================

<0, 1> // UV setter

<2, 3> // UV object

<4, 5> // UV array

<0, 1> // XY setter

<2, 3> // XY object

<4, 5> // XY array

<0, 1, 2> // XYZ setter

<3, 4, 5> // XYZ object

<6, 7, 8> // XYZ array

<0, 1, 2, 3> // XYZW setter

<4, 5, 6, 7> // XYZW object

<8, 9, 10, 11> // XYZW array



//==============================================================================
// TEST #42: Member Vector initializer tests
//==============================================================================

box { // box1
    <0, 0, 0>, <1, 1, 1>
}

box { // box2
    <1, 1, 1>, <2, 2, 2>
}



//==============================================================================
// TEST #43: testStage corner test
//==============================================================================

union {
    box { // panelBottom
        <-3.1, -3, 3.1>, <3, -3.1, -3>
        texture { pigment { color <0.75, 0.75, 0.75> }}
    }
    box { // panelLeft
        <-3.1, 3, 3.1>, <-3, -3.1, -3>
        texture { pigment { color <0.75, 0.75, 0.75> }}
    }
    box { // panelRight
        <-3.1, 3, 3.1>, <3, -3.1, 3>
        texture { pigment { color <0.75, 0.75, 0.75> }}
    }
    cylinder { // leftMajorGridA-3
        <-3, -3, 3>, <-3, -3, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridB-3
        <-3, -3, -3>, <-3, 3, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridA-3
        <3, -3, 3>, <-3, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridB-3
        <-3, -3, 3>, <-3, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridA-3
        <3, -3, -3>, <-3, -3, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridB-3
        <-3, -3, -3>, <-3, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridA-2
        <-3, -2, 3>, <-3, -2, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridB-2
        <-3, -3, -2>, <-3, 3, -2>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridA-2
        <3, -2, 3>, <-3, -2, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridB-2
        <-2, -3, 3>, <-2, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridA-2
        <3, -3, -2>, <-3, -3, -2>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridB-2
        <-2, -3, -3>, <-2, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridA-1
        <-3, -1, 3>, <-3, -1, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridB-1
        <-3, -3, -1>, <-3, 3, -1>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridA-1
        <3, -1, 3>, <-3, -1, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridB-1
        <-1, -3, 3>, <-1, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridA-1
        <3, -3, -1>, <-3, -3, -1>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridB-1
        <-1, -3, -3>, <-1, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridA0
        <-3, 0, 3>, <-3, 0, -3>, 0.05
        texture { pigment { color <0.5, 0.0, 0.0> }}
    }
    cylinder { // leftMajorGridB0
        <-3, -3, 0>, <-3, 3, 0>, 0.05
        texture { pigment { color <0.5, 0.0, 0.0> }}
    }
    cylinder { // rightMajorGridA0
        <3, 0, 3>, <-3, 0, 3>, 0.05
        texture { pigment { color <0.5, 0.0, 0.0> }}
    }
    cylinder { // rightMajorGridB0
        <0, -3, 3>, <0, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.0, 0.0> }}
    }
    cylinder { // bottomMajorGridA0
        <3, -3, 0>, <-3, -3, 0>, 0.05
        texture { pigment { color <0.5, 0.0, 0.0> }}
    }
    cylinder { // bottomMajorGridB0
        <0, -3, -3>, <0, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.0, 0.0> }}
    }
    cylinder { // leftMajorGridA1
        <-3, 1, 3>, <-3, 1, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridB1
        <-3, -3, 1>, <-3, 3, 1>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridA1
        <3, 1, 3>, <-3, 1, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridB1
        <1, -3, 3>, <1, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridA1
        <3, -3, 1>, <-3, -3, 1>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridB1
        <1, -3, -3>, <1, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridA2
        <-3, 2, 3>, <-3, 2, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridB2
        <-3, -3, 2>, <-3, 3, 2>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridA2
        <3, 2, 3>, <-3, 2, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridB2
        <2, -3, 3>, <2, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridA2
        <3, -3, 2>, <-3, -3, 2>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridB2
        <2, -3, -3>, <2, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridA3
        <-3, 3, 3>, <-3, 3, -3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // leftMajorGridB3
        <-3, -3, 3>, <-3, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridA3
        <3, 3, 3>, <-3, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // rightMajorGridB3
        <3, -3, 3>, <3, 3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridA3
        <3, -3, 3>, <-3, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    cylinder { // bottomMajorGridB3
        <3, -3, -3>, <3, -3, 3>, 0.05
        texture { pigment { color <0.5, 0.5, 0.5> }}
    }
    light_source { // light
        <4.5, 4.5, -4.5>, rgb <1.5, 1.5, 1.5>
    }
    split_union off
}
camera {
    perspective
    location <10.2, 6, -10.2>
    right <1, 0.05, 0>
    angle 38
    look_at <0, -0.8, 0>
}



//==============================================================================
// TEST #44: testStage triplane test
//==============================================================================

union {
    box {
        <-3, 3, 0.01>, <3, -3, -0.01>
    }
    box {
        <-0.01, 3, 3>, <0.01, -3, -3>
    }
    box {
        <-3, 0.01, -3>, <3, -0.01, 3>
    }
    light_source {
        <6, 6, 0>, rgb <1, 1, 1>
    }
    split_union off
    texture { pigment { color <0.75, 0.75, 0.75> }}
}
camera {
    perspective
    location <10.2, 6, -10.2>
    right <1, 0.05, 0>
    angle 38
    look_at <0, -0.8, 0>
}



//==============================================================================
// TEST #45: Primitive/Sphere SDL wrapper test
//==============================================================================

// This should be a comment before

sphere {
    <0, 0, 0>, 2
}

// This should be a comment after



//==============================================================================
// TEST #46: Transform debug test #1
//==============================================================================

SCALE RAW:  matrix <2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0>
ROTATE RAW: matrix <3.749399456654644e-33, 6.123233995736766e-17, -1, 0, 1, 6.123233995736766e-17, 1, 0, 3.749399456654644e-33, 0, 0, 0>
PRE INIT 2: matrix <2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0>
POST INIT 1: matrix <3.749399456654644e-33, 6.123233995736766e-17, -1, 0, 1, 6.123233995736766e-17, 1, 0, 3.749399456654644e-33, 0, 0, 0>
POST INIT 2: matrix <7.498798913309288e-33, 1.2246467991473532e-16, -2, 0, 2, 1.2246467991473532e-16, 2, 0, 7.498798913309288e-33, 0, 0, 0>



//==============================================================================
// TEST #47: Transform scale/rotate/translate test
//==============================================================================

INIT NONE:  matrix <1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
SCALED:     matrix <2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0>
ROTATED:    matrix <7.498798913309288e-33, 1.2246467991473532e-16, -2, 0, 2, 1.2246467991473532e-16, 2, 0, 7.498798913309288e-33, 0, 0, 0>
TRANSLATED: matrix <7.498798913309288e-33, 1.2246467991473532e-16, -2, 0, 2, 1.2246467991473532e-16, 2, 0, 7.498798913309288e-33, 3, 3, 3>
SKEWED:     matrix <7.498798913309288e-33, 1.2246467991473532e-16, -2, 0, 2, 1.2246467991473532e-16, 2, 3, 7.498798913309288e-33, 3, 7.5, 3>



//==============================================================================
// TEST #48: Primitive transformations test
//==============================================================================

INIT NONE:  matrix <1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>
SCALED:     matrix <2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0>
ROTATED:    matrix <7.498798913309288e-33, 1.2246467991473532e-16, -2, 0, 2, 1.2246467991473532e-16, 2, 0, 7.498798913309288e-33, 0, 0, 0>
TRANSLATED: matrix <7.498798913309288e-33, 1.2246467991473532e-16, -2, 0, 2, 1.2246467991473532e-16, 2, 0, 7.498798913309288e-33, 3, 3, 3>
SKEWED:     matrix <7.498798913309288e-33, 1.2246467991473532e-16, -2, 0, 2, 1.2246467991473532e-16, 2, 3, 7.498798913309288e-33, 3, 7.5, 3>



//==============================================================================
// TEST #49: Finish test #1
//==============================================================================

finish { // undefined
    SomeFinish
    ambient rgb <0.2, 0.2, 0.2>
    diffuse albedo 0.5, 0.1
    emission rgb <0.1, 0.1, 0>
    brilliance 0.987
    phong albedo 90
    phong_size 21
    specular albedo 2.2
    roughness 0.657
    metallic 0.2
    crand 0.01
    conserve_energy true
    reflection {
        rgb <0.6, 0.7, 0.8>, rgb <0.81, 0.82, 0.83>
        fresnel true
        falloff 0.2
        exponent 1
        metallic 0.2
    }
    subsurface { translucency rgb <0.5, 0.2, 0.1> }
    irid {
        0.777
        thickness 0.356
        turbulence 0.212
    }
}

